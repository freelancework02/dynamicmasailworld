<!DOCTYPE html>
<html lang="ur" dir="rtl">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1.0,shrink-to-fit=no"/>
  <title>موضوعات کے فتاویٰ — مسائل ورلڈ</title>

  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

  <style>
    @font-face {
      font-family: 'NaatFont';
      src: url('https://res.cloudinary.com/awescreative/raw/upload/v1749150996/Awes/naatfont.ttf') format('truetype');
      font-weight: normal;
      font-style: normal;
    }
    body {
      font-family: 'NaatFont', serif;
      font-size: 80%;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      padding-bottom: 70px;
      padding-top: 56px;
    }
    @media (min-width: 768px) { body { padding-top: 0; } }
    .circular-logo { border-radius: 50%; }
    [contenteditable="false"] { -webkit-user-modify: read-only; user-select: text; }
    .shadow-top-lg { box-shadow: 0 -6px 16px rgba(0,0,0,.08); }
    .hidden-important { display: none !important; }
  </style>

  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            'rich_black': '#01161e',
            'midnight_green': '#124559',
            'air_force_blue': '#598392',
            'ash_gray': '#aec3b0',
            'beige': '#eff6e0'
          }
        }
      }
    }
  </script>
</head>
<body>

  <!-- Loader -->
  <div id="loader" class="fixed inset-0 flex items-center justify-center bg-beige z-50">
    <span class="text-3xl md:text-5xl font-bold text-midnight_green animate-pulse">
      صَلَّى اللّٰهُ عَلَيْهِ وَسَلَّمْ
    </span>
  </div>

  <!-- Mobile-only bar -->
  <div class="fixed top-0 left-0 right-0 md:hidden bg-rich_black text-white flex justify-between items-center py-2 px-4 z-50">
    <a href="/question" class="text-sm text-beige hover:text-ash_gray transition">سوال پوچھیں</a>
    <div class="flex items-center space-x-4 space-x-reverse">
      <a href="https://www.facebook.com/share/1PhWgmvP2g/" class="hover:text-beige transition text-base"><i class="bi bi-facebook"></i></a>
      <a href="https://www.facebook.com/share/1PhWgmvP2g/" class="hover:text-beige transition text-base"><i class="bi bi-twitter-x"></i></a>
      <a href="http://youtube.com/c/AzharAlimi" class="hover:text-beige transition text-base"><i class="bi bi-youtube"></i></a>
    </div>
  </div>

  <!-- Desktop header -->
  <header id="qs-header" class="bg-beige/90 backdrop-blur-md shadow-lg sticky top-0 z-50 rounded-b-xl hidden md:block">
    <div class="bg-rich_black text-air_force_blue-700 py-2">
      <div class="container mx-auto px-4 sm:px-6 flex justify-between items-center space-x-reverse text-lg">
        <a href="/question" class="nav-link text-beige hover:text-ash_gray transition">سوال پوچھیں</a>
        <div class="flex items-center space-x-4 space-x-reverse">
          <a href="https://www.facebook.com/share/1PhWgmvP2g/" class="hover:text-beige transition"><i class="bi bi-facebook"></i></a>
          <a href="https://www.facebook.com/share/1PhWgmvP2g/" class="hover:text-beige transition"><i class="bi bi-twitter-x"></i></a>
          <a href="http://youtube.com/c/AzharAlimi" class="hover:text-beige transition"><i class="bi bi-youtube"></i></a>
        </div>
      </div>
    </div>
    <nav class="container mx-auto px-4 sm:px-6 py-4">
      <div class="flex justify-between items-center">
        <div class="text-3xl font-bold text-midnight_green">
          <a href="https://masailworld.com/" class="flex items-center space-x-reverse space-x-2">
            <img src="https://alqalamarts.com/mw/masailworld.png" alt="Masail World Logo" class="h-10 w-10 circular-logo">
            <span class="text-3xl font-bold text-midnight_green">مسائل ورلڈ</span>
            <span class="text-xl font-normal block">دار الافتاء اہل سنت</span>
          </a>
        </div>
        <div class="hidden md:flex items-center space-x-reverse space-x-8">
          <a href="/" class=" text-midnight_green hover:text-midnight_green-600 transition text-lg font-semibold">صفحہ اول</a>
          <a href="/fatwa" class=" text-midnight_green hover:text-midnight_green-600 transition text-lg font-semibold">فتاویٰ</a>
          <a href="/about" class=" text-midnight_green hover:text-midnight_green-600 transition text-lg font-semibold">تعارف</a>
          <a href="/articles" class=" text-midnight_green hover:text-midnight_green-600 transition text-lg font-semibold">مضامین</a>
          <a href="/Categoryfatawa" class=" text-midnight_green hover:text-midnight_green-600 transition text-lg font-semibold">موضوعات</a>
          <a href="/book" class=" text-midnight_green hover:text-midnight_green-600 transition text-lg font-semibold">اسلامی کتب</a>
          <a href="/question" class=" text-midnight_green hover:text-midnight_green-600 transition text-lg font-semibold">سوال پوچھیں</a>
        </div>
      </div>
    </nav>
  </header>

  <main class="container mx-auto px-4 pt-24 pb-12 max-w-5xl">
    <a href="https://masailworld.com" class="text-midnight_green font-semibold">&larr; صفحہ اول</a>

    <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-3 mt-2 mb-4">
      <h1 class="text-4xl font-bold">موضوعات کے فتاویٰ</h1>

      <!-- Active Tag Chip -->
      <div id="activeTagWrap" class="hidden">
        <span class="inline-flex items-center gap-2 bg-beige border border-ash_gray px-4 py-2 rounded-full text-midnight_green">
          <i class="bi bi-tag-fill"></i>
          <span id="activeTagName"></span>
          <button id="clearTagBtn" class="ml-2 text-sm text-air_force_blue hover:text-midnight_green" title="فلٹر صاف کریں">
            صاف کریں
          </button>
        </span>
      </div>
    </div>

    <!-- Search + Tag Combobox -->
    <div class="max-w-3xl mx-auto mb-8 flex flex-col md:flex-row md:space-x-reverse md:space-x-4 space-y-3 md:space-y-0">
      <div class="relative flex-grow">
        <input id="searchInput" type="text" placeholder="فتویٰ یا مضمون تلاش کریں..." class="w-full p-4 pr-12 rounded-full border border-black focus:outline-none focus:ring-2" />
        <span class="absolute top-1/2 -translate-y-1/2 left-4 text-gray-500"><i class="bi bi-search"></i></span>
      </div>

      <!-- Combobox -->
      <div id="tagComboWrap" class="relative w-full md:w-56">
        <input
          id="tagComboInput"
          type="text"
          role="combobox"
          aria-expanded="false"
          aria-controls="tagComboList"
          aria-autocomplete="list"
          placeholder="تمام ٹیگز"
          class="w-full p-4 pr-12 rounded-full border border-black bg-white focus:outline-none focus:ring-2 text-right"
        />
        <button id="tagComboToggle" type="button"
          class="absolute top-1/2 -translate-y-1/2 left-3 p-1 rounded-md hover:bg-ash_gray/30"
          aria-label="ٹیگ فہرست کھولیں/بند کریں">
          <i class="bi bi-chevron-down"></i>
        </button>
        <ul id="tagComboList"
            role="listbox"
            class="hidden absolute right-0 left-0 mt-2 max-h-60 overflow-auto bg-white border border-black/20 rounded-2xl shadow-lg z-50">
        </ul>
        <div id="tagHint" class="text-xs text-gray-500 mt-1 pr-2">200 ٹیگز دستیاب — تلاش کرنے کے لیے ٹائپ کریں</div>
      </div>
    </div>

    <div id="list" class="space-y-6"></div>

    <div class="text-center mt-8">
      <button id="loadMoreBtn" class="bg-midnight_green text-white py-3 px-6 rounded-full font-bold hover:bg-midnight_green-600 transition">مزید لوڈ کریں</button>
    </div>
  </main>

  <!-- Inline loader -->
  <div id="inlineLoader" class="hidden text-center my-6">
    <span class="text-xl font-bold text-midnight_green animate-pulse">لوڈ ہو رہا ہے...</span>
  </div>

  <!-- Mobile bottom nav -->
  <nav class="fixed bottom-0 left-0 right-0 md:hidden bg-beige shadow-top-lg border-t border-ash_gray/50 z-50 rounded-t-xl">
    <ul class="flex justify-around items-center h-16">
      <li>
        <a href="https://masailworld.com/" class="flex flex-col items-center justify-center text-midnight_green hover:text-midnight_green-600 transition transform hover:scale-110 active:scale-100">
          <i class="bi bi-house-door-fill text-xl"></i>
          <span class="text-sm">صفحہ اول</span>
        </a>
      </li>
      <li>
        <a href="/fatwa" class="flex flex-col items-center justify-center text-midnight_green hover:text-midnight_green-600 transition transform hover:scale-110 active:scale-100">
          <i class="bi bi-file-text-fill text-xl"></i>
          <span class="text-sm">فتاویٰ</span>
        </a>
      </li>
      <li>
        <a href="/book" class="flex flex-col items-center justify-center text-midnight_green hover:text-midnight_green-600 transition transform hover:scale-110 active:scale-100">
          <i class="bi bi-book-fill text-xl"></i>
          <span class="text-sm">اسلامی کتب</span>
        </a>
      </li>
      <li>
        <a href="/question" class="flex flex-col items-center justify-center text-midnight_green hover:text-midnight_green-600 transition transform hover:scale-110 active:scale-100">
          <i class="bi bi-chat-dots-fill text-xl"></i>
          <span class="text-sm">سوال پوچھیں</span>
        </a>
      </li>
    </ul>
  </nav>

  <!-- Footer -->
  <footer id="qs-footer" class="bg-rich_black text-beige pt-16 rounded-t-2xl">
    <div class="container mx-auto px-6">
      <div class="grid grid-cols-1 md:grid-cols-4 gap-10">
        <div class="col-span-1 md:col-span-2">
          <h3 class="text-3xl font-bold mb-4">مسائل ورلڈ</h3>
          <p class="text-air_force_blue-700 text-lg leading-relaxed">ایک آن لائن پلیٹ فارم ہے جو قرآن و سنت کی روشنی میں آپ کے مسائل کا حل پیش کرتا ہے۔ ہمارا مقصد مستند علمی تحقیق اور اہلسنت والجماعت کے مطابق رہنمائی کو عام کرنا ہے۔</p>
          <div class="flex space-x-5 space-x-reverse text-3xl mt-6">
            <a href="https://www.facebook.com/share/1PhWgmvP2g/" class="text-air_force_blue-700 hover:text-beige transition"><i class="bi bi-facebook"></i></a>
            <a href="https://www.facebook.com/share/1PhWgmvP2g/" class="hover:text-beige transition"><i class="bi bi-twitter-x"></i></a>
            <a href="http://youtube.com/c/AzharAlimi" class="text-air_force_blue-700 hover:text-beige transition"><i class="bi bi-youtube"></i></a>
          </div>
        </div>
        <div>
          <h3 class="text-2xl font-semibold mb-4">فوری لنکس</h3>
          <ul class="space-y-3 text-lg">
            <li><a href="/fatwa" class="text-air_force_blue-700 hover:text-beige transition">فتاویٰ</a></li>
            <li><a href="/articles" class="text-air_force_blue-700 hover:text-beige transition">مضامین</a></li>
            <li><a href="/question" class="nav-link text-air_force_blue-700 hover:text-beige transition">سوال پوچھیں</a></li>
            <li><a href="/about" class="nav-link text-air_force-blue-700 hover:text-beige transition">ہمارے بارے میں</a></li>
          </ul>
        </div>
        <div>
          <h3 class="text-2xl font-semibold mb-4">ہم سے رابطہ کریں</h3>
          <ul class="space-y-3 text-lg text-air_force_blue-700">
            <li><i class="bi bi-envelope ml-2"></i>azharalimi95@gmail.com</li>
            <li><i class="bi bi-geo-alt ml-2"></i>Jamia Quadria Alimia Taloja Phase 1 New Mumbai</li>
          </ul>
        </div>
        <div>
          <h3 class="text-2xl font-semibold mb-4">ہمارے بارے میں</h3>
          <p class="text-air_force_blue-700 text-lg leading-relaxed">مسائل ورلڈ ایک آن لائن پلیٹ فارم ہے جو اہل سنت والجماعت کے مطابق شرعی رہنمائی فراہم کرتا ہے۔</p>
          <a href="https://alqalamarts.com/" target="_blank" class="text-air_force_blue-700 hover:text-beige transition block mt-2 text-sm font-sans">
            <button id="install-app-button" class="bg-air_force_blue-600 text-white font-bold py-2 px-6 rounded-full hover:bg-air_force_blue-400 transition text-sm sm:text-md shadow-md mt-4">
              <i class="bi bi-plus-circle ml-2"></i> ایپ انسٹال کریں
            </button>
          </a>
        </div>
      </div>
      <div class="mt-12 border-t border-midnight_green-400 pt-8 pb-8 text-center text-air_force_blue">
        <p class="text-lg">© 2025 AlQalamArts.com. All rights reserved. | © 2025 مسائل ورلڈ۔ تمام حقوق محفوظ ہیں۔</p>
      </div>
    </div>
  </footer>

 <script>
/* ---------- Constants ---------- */
const API_BASE = 'http://localhost:5000/api'; // switch to https:// if your server uses HTTPS
/* NEW: same-origin view API (prevents CORS/mixed-content) */
const VIEW_API_BASE = '/api/fatwa';

/* ---------- Guard ---------- */
try { document.designMode = 'off'; } catch (e) {}
document.body.setAttribute('contenteditable', 'false');
document.querySelectorAll('input, textarea').forEach(el => el.spellcheck = false);

/* ---------- DOM ---------- */
const listEl = document.getElementById('list');
const searchInput = document.getElementById('searchInput');
const loader = document.getElementById('loader');
const inlineLoader = document.getElementById('inlineLoader');
const loadMoreBtn = document.getElementById('loadMoreBtn');

const activeTagWrap = document.getElementById('activeTagWrap');
const activeTagNameEl = document.getElementById('activeTagName');
const clearTagBtn = document.getElementById('clearTagBtn');

/* Combobox DOM */
const tagComboWrap  = document.getElementById('tagComboWrap');
const tagComboInput = document.getElementById('tagComboInput');
const tagComboList  = document.getElementById('tagComboList');
const tagComboToggle= document.getElementById('tagComboToggle');
const tagHint = document.getElementById('tagHint');

/* ---------- Vars ---------- */
let fatawaData = [];
let mode = 'all';         // 'all' | 'tag'
let currentTag = '';
let offset = 0;
let limit = 50;
let isLoading = false;
let allLoaded = false;

let tagsList = [];        // [{Name}]
let filteredTagItems = [];
let activeListIndex = -1;

/* ---------- Config ---------- */
const TAGS_SCAN_LIMIT = 1000;
const FETCH_TIMEOUT_MS = 12000;

/* ---------- Helpers ---------- */
function norm(v){ return (v ?? '').toString().trim(); }
function getParam(name){ return new URLSearchParams(location.search).get(name) || ''; }
function openCombo(){ tagComboList.classList.remove('hidden'); tagComboInput.setAttribute('aria-expanded','true'); }
function closeCombo(){ tagComboList.classList.add('hidden'); tagComboInput.setAttribute('aria-expanded','false'); activeListIndex=-1; highlightActiveItem(); }

function normalizeUrdu(s){
  if (s == null) return '';
  let out = String(s);
  try{ out = out.normalize('NFC'); }catch(e){}
  out = out.replace(/[\u200C\u200D\u200E\u200F\u202A-\u202E\u061C\u0640]/g,'');
  out = out.replace(/،/g, ',').replace(/\s*,\s*/g, ',').trim();
  return out;
}

function tokenizeTags(val){
  const clean = normalizeUrdu(val);
  if (!clean) return [];
  return clean.split(',').map(t=>t.trim()).filter(Boolean);
}

async function fetchJson(url, fallback){
  const ctrl = new AbortController();
  const timer = setTimeout(()=>ctrl.abort(), FETCH_TIMEOUT_MS);
  try{
    const res = await fetch(url, { signal: ctrl.signal, headers: { 'Accept': 'application/json' }});
    if (!res.ok) throw new Error(`HTTP ${res.status}`);
    const json = await res.json();
    clearTimeout(timer);
    return json;
  }catch(err){
    console.warn('fetchJson failed:', err, 'URL:', url);
    clearTimeout(timer);
    return typeof fallback !== 'undefined' ? fallback : null;
  }
}

/* ---------- Build tags list: try /api/tags (200), fallback to scan ---------- */
async function fetchTagsIndex(){
  // 1) Preferred: dedicated tags endpoint (returns array of objects or strings)
  const endpoint = `${API_BASE}/tags?limit=200`;
  let raw = await fetchJson(endpoint, null);
  if (raw && typeof raw === 'object' && raw.success && Array.isArray(raw.data)) {
    raw = raw.data;
  }
  if (Array.isArray(raw) && raw.length) {
    tagsList = raw
      .map(x => {
        if (typeof x === 'string') return { Name: normalizeUrdu(x) };
        if (x && (x.Name || x.name)) return { Name: normalizeUrdu(x.Name || x.name) };
        if (x && x.slug) return { Name: normalizeUrdu(x.slug) };
        return null;
      })
      .filter(Boolean)
      .reduce((acc, t)=>{ if (t.Name) acc.add(t.Name); return acc; }, new Set());
    tagsList = Array.from(tagsList).sort((a,b)=> a.localeCompare(b, 'ur')).map(Name => ({ Name }));
    tagHint.textContent = `${tagsList.length} ٹیگز لوڈ ہوئے — تلاش کرنے کے لیے ٹائپ کریں`;
    populateTagCombo();
    return;
  }

  // 2) Fallback: scan first N fatawa to build unique tags
  const url = `${API_BASE}/fatwa?limit=${TAGS_SCAN_LIMIT}&offset=0`;
  const rows = await fetchJson(url, []);
  const set = new Set();
  (rows || []).forEach(r=>{
    tokenizeTags(r.tags || '').forEach(t => set.add(t));
  });
  tagsList = Array.from(set).sort((a,b)=> a.localeCompare(b, 'ur')).map(Name => ({ Name }));
  tagHint.textContent = `${tagsList.length} ٹیگز (fallback) — تلاش کرنے کے لیے ٹائپ کریں`;
  populateTagCombo();
}

/* ---------- Combobox ---------- */
function populateTagCombo(filterText = '') {
  const q = normalizeUrdu(filterText).toLowerCase();
  const items = tagsList
    .filter(t => !q || normalizeUrdu(t.Name).toLowerCase().includes(q))
    .sort((a,b)=> (a.Name || '').localeCompare((b.Name || ''), 'ur'));

  filteredTagItems = items;
  tagComboList.innerHTML = '';

  // "تمام ٹیگز"
  const liAll = document.createElement('li');
  liAll.role = 'option';
  liAll.dataset.name = '';
  liAll.className = 'cursor-pointer px-3 py-2 hover:bg-beige rounded-t-2xl';
  liAll.innerHTML = 'تمام ٹیگز';
  liAll.addEventListener('click', () => selectTagFromCombo(''));
  tagComboList.appendChild(liAll);

  items.forEach((t) => {
    const li = document.createElement('li');
    li.role = 'option';
    li.dataset.name = t.Name;
    li.className = 'cursor-pointer px-3 py-2 hover:bg-beige';
    li.textContent = t.Name;
    li.addEventListener('click', () => selectTagFromCombo(t.Name));
    tagComboList.appendChild(li);
  });

  activeListIndex = -1;
  highlightActiveItem();
}

function highlightActiveItem() {
  const options = Array.from(tagComboList.querySelectorAll('li[role="option"]'));
  options.forEach((el, idx) => {
    if (idx === activeListIndex) {
      el.classList.add('bg-ash_gray/40');
      el.scrollIntoView({ block: 'nearest' });
    } else {
      el.classList.remove('bg-ash_gray/40');
    }
  });
}

/* ---------- Selecting a tag (uses local /by-tag API) ---------- */
function selectTagFromCombo(name) {
  const newTag = norm(name);

  if (!newTag) {
    // Clear back to "all"
    currentTag = '';
    mode = 'all';
    tagComboInput.value = '';
    tagComboInput.placeholder = 'تمام ٹیگز';
    activeTagWrap.classList.add('hidden');

    limit = 50;
    offset = 0;
    fatawaData = [];
    allLoaded = false;
    loadMoreBtn.style.display = '';
    const url = new URL(window.location.href);
    url.searchParams.delete('tag');
    window.history.replaceState({}, '', url.toString());
    fetchFatawa(true);
    closeCombo();
    return;
  }

  // Tag mode
  currentTag = newTag;
  mode = 'tag';
  tagComboInput.value = currentTag;
  activeTagNameEl.textContent = currentTag;
  activeTagWrap.classList.remove('hidden');

  // Update URL
  const url = new URL(window.location.href);
  url.searchParams.set('tag', currentTag);
  window.history.replaceState({}, '', url.toString());

  // Reset paging and fetch via /by-tag
  offset = 0;
  limit = 50;
  fatawaData = [];
  allLoaded = false;
  loadMoreBtn.style.display = '';
  fetchFatawa(true);
  closeCombo();
}

/* ---------- Render ---------- */
function sanitizeHtml(unsafeHtml) {
  if (!unsafeHtml) return '';
  const tpl = document.createElement('template');
  tpl.innerHTML = unsafeHtml;
  tpl.content.querySelectorAll('script,style').forEach(n => n.remove());
  tpl.content.querySelectorAll('[contenteditable]').forEach(n => n.removeAttribute('contenteditable'));
  tpl.content.querySelectorAll('*').forEach(el => {
    const attrs = Array.from(el.attributes || []);
    attrs.forEach(attr => {
      const name = attr.name.toLowerCase();
      const val = String(attr.value || '').toLowerCase();
      if (name.startsWith('on')) el.removeAttribute(attr.name);
      else if (val.includes('javascript:')) el.removeAttribute(attr.name);
    });
  });
  const wrapper = tpl.content.querySelector('.ql-editor');
  return wrapper ? wrapper.innerHTML : tpl.innerHTML;
}

function escapeText(s) {
  if (s === null || s === undefined) return '';
  return String(s)
    .replaceAll('&', '&amp;')
    .replaceAll('<', '&lt;')
    .replaceAll('>', '&gt;')
    .replaceAll('"', '&quot;')
    .replaceAll("'", '&#039;');
}

/* Your sorting: Views DESC, then Title (Urdu) */
function sortFatawa(arr){
  return arr.slice().sort((a,b)=>{
    const av = Number(a.Views || 0);
    const bv = Number(b.Views || 0);
    if (bv !== av) return bv - av;
    const at = (''+ (a.Title||'')).toLowerCase();
    const bt = (''+ (b.Title||'')).toLowerCase();
    return at.localeCompare(bt, 'ur');
  });
}

/* NEW: bump view for a fatwa id (POST; survives navigation) */
function bumpFatwaView(id){
  if (!id) return;
  const url = `${VIEW_API_BASE}/${encodeURIComponent(id)}/view`;

  try {
    if (navigator.sendBeacon) {
      const blob = new Blob(['1'], { type: 'text/plain' });
      if (navigator.sendBeacon(url, blob)) return;
    }
  } catch {}

  try {
    fetch(url, {
      method: 'POST',
      keepalive: true,
      credentials: 'include',
      headers: { 'Content-Type': 'text/plain' },
      body: '1'
    }).catch(()=>{});
  } catch {}
}

function renderList(data) {
  listEl.innerHTML = '';
  if (!data.length) {
    listEl.innerHTML = '<p class="text-center text-gray-600">کوئی فتاویٰ دستیاب نہیں۔</p>';
    return;
  }

  const sorted = sortFatawa(data);
  sorted.forEach((f, i) => {
    const idx = i + 1;
    const a = document.createElement('a');
    a.href = `/fatwa/${encodeURIComponent(f.id)}`;
    a.className = 'block bg-white p-6 rounded-2xl shadow-lg border border-gray-200 transition-all duration-200 card-link';
    a.setAttribute('contenteditable', 'false');

    /* NEW: bump views on click (non-blocking) */
    a.addEventListener('click', () => { bumpFatwaView(f.id); }, { passive: true });

    const title = `<h3 class="text-xl font-semibold mb-2" contenteditable="false">${escapeText(f.Title || f.question || 'بلا عنوان')}</h3>`;
    const detail = sanitizeHtml(String(f.detailquestion || f.details || ''));

    a.innerHTML = `
      <div class="flex items-start">
        <div class="flex-shrink-0 w-14 h-14 ${ (idx % 2) ? 'bg-midnight_green' : 'bg-air_force_blue' } text-white rounded-xl flex items-center justify-center font-bold text-2xl ml-4">${idx}</div>
        <div class="flex-grow text-right">
          ${title}
          <div class="text-gray-700 line-clamp-2" contenteditable="false">${detail}</div>
          <div class="mt-4 flex justify-between items-center">
            <span class="text-green-700 font-bold">مکمل جواب پڑھیں ←</span>
            <div class="flex items-center text-gray-500 space-x-3 space-x-reverse">
              <span class="flex items-center"><i class="bi bi-eye-fill ml-1"></i> ${Number(f.Views || 0)}</span>
            </div>
          </div>
        </div>
      </div>
    `;
    listEl.appendChild(a);
  });
}

/* ---------- Apply search filter client-side ---------- */
function applyFilters() {
  const q = norm(searchInput.value).toLowerCase();

  let working = fatawaData.filter(f=>{
    if (!q) return true;
    return (
      (f.Title && String(f.Title).toLowerCase().includes(q)) ||
      (f.detailquestion && String(f.detailquestion).toLowerCase().includes(q)) ||
      (f.details && String(f.details).toLowerCase().includes(q))
    );
  });

  renderList(working);
}

/* ---------- Fetch fatawa (all mode or tag mode) ---------- */
async function fetchFatawa(forceClearBefore = false) {
  if (isLoading || allLoaded) return;
  isLoading = true;

  if (forceClearBefore) {
    inlineLoader.classList.remove('hidden');
    loadMoreBtn.disabled = true;
    listEl.innerHTML = '';
  } else if (offset === 0) {
    loader.style.display = 'flex';
  } else {
    inlineLoader.classList.remove('hidden');
    loadMoreBtn.disabled = true;
  }

  try {
    if (mode === 'tag' && currentTag) {
      const params = new URLSearchParams({
        tag: currentTag,
        status: 'any',
        isActive: 'any',
        orderBy: 'recent',
        limit: String(limit),
        offset: String(offset)
      });
      const url = `${API_BASE}/fatwa/by-tag?${params.toString()}`;
      const resp = await fetchJson(url, { data: [] });
      const rows = Array.isArray(resp?.data) ? resp.data : [];

      if (!rows.length) {
        if (offset === 0) {
          fatawaData = [];
          renderList([]);
        }
        allLoaded = true;
        loadMoreBtn.style.display = 'none';
      } else {
        fatawaData = fatawaData.concat(rows);
        applyFilters();
        offset += limit;
        if (rows.length < limit) {
          allLoaded = true;
          loadMoreBtn.style.display = 'none';
        } else {
          loadMoreBtn.style.display = '';
        }
      }
    } else {
      const url = `${API_BASE}/fatwa?limit=${limit}&offset=${offset}`;
      const rows = await fetchJson(url, []);
      if (!Array.isArray(rows) || rows.length === 0) {
        allLoaded = true;
        loadMoreBtn.style.display = 'none';
      } else {
        fatawaData = fatawaData.concat(rows);
        applyFilters();
        offset += limit;
      }
    }
  } catch (err) {
    console.error('Failed to fetch fatawa:', err);
    if (offset === 0) listEl.innerHTML = '<p class="text-center text-red-600">فتاویٰ لوڈ کرنے میں مسئلہ پیش آیا۔</p>';
  } finally {
    loader.style.display = 'none';
    inlineLoader.classList.add('hidden');
    loadMoreBtn.disabled = false;
    isLoading = false;
  }
}

/* ---------- Initial boot ---------- */
(async function init(){
  // Load tags (200) from local /api/tags if available; fallback to scan
  await fetchTagsIndex();

  // Read ?tag=
  const fromQS = norm(getParam('tag'));
  if (fromQS) {
    currentTag = fromQS;
    mode = 'tag';
    tagComboInput.value = currentTag;
    activeTagNameEl.textContent = currentTag;
    activeTagWrap.classList.remove('hidden');
  }

  // Initial fetch
  await fetchFatawa();

  // Render
  applyFilters();
})();

/* ---------- Events ---------- */
// Debounced search
let searchDebounce;
searchInput.addEventListener('input', () => {
  clearTimeout(searchDebounce);
  searchDebounce = setTimeout(applyFilters, 200);
});

// Pagination
loadMoreBtn.addEventListener('click', fetchFatawa);

// Clear tag
clearTagBtn.addEventListener('click', () => {
  currentTag = '';
  mode = 'all';
  tagComboInput.value = '';
  tagComboInput.placeholder = 'تمام ٹیگز';
  activeTagWrap.classList.add('hidden');

  limit = 50;
  offset = 0;
  fatawaData = [];
  allLoaded = false;
  loadMoreBtn.style.display = '';

  const url = new URL(window.location.href);
  url.searchParams.delete('tag');
  window.history.replaceState({}, '', url.toString());

  fetchFatawa(true);
});

/* Combobox interactions */
tagComboToggle.addEventListener('click', (e) => {
  e.preventDefault();
  const isHidden = tagComboList.classList.contains('hidden');
  if (isHidden) {
    populateTagCombo(tagComboInput.value || '');
    openCombo();
    tagComboInput.focus();
  } else {
    closeCombo();
  }
});

tagComboInput.addEventListener('input', (e) => {
  populateTagCombo(e.target.value);
  openCombo();
});

// Press Enter to select the highlighted/first match
tagComboInput.addEventListener('keydown', (e) => {
  const options = Array.from(tagComboList.querySelectorAll('li[role="option"]'));
  const max = options.length - 1;

  if (e.key === 'ArrowDown') {
    e.preventDefault();
    openCombo();
    activeListIndex = Math.min(max, activeListIndex + 1);
    highlightActiveItem();
  } else if (e.key === 'ArrowUp') {
    e.preventDefault();
    openCombo();
    activeListIndex = Math.max(0, activeListIndex - 1);
    highlightActiveItem();
  } else if (e.key === 'Enter') {
    if (!tagComboList.classList.contains('hidden')) {
      e.preventDefault();
      const idx = activeListIndex >= 0 ? activeListIndex : 0;
      const opt = options[idx];
      if (opt) selectTagFromCombo(opt.dataset.name ?? '');
    } else {
      const typed = norm(tagComboInput.value);
      const exists = tagsList.some(t => norm(t.Name) === typed);
      selectTagFromCombo(exists ? typed : '');
    }
  } else if (e.key === 'Escape') {
    closeCombo();
  }
});

tagComboInput.addEventListener('focus', () => {
  populateTagCombo(tagComboInput.value || '');
  openCombo();
});

// Click outside closes the combo
document.addEventListener('click', (e) => {
  if (!tagComboWrap.contains(e.target)) {
    closeCombo();
  }
});
</script>

</body>
</html>
